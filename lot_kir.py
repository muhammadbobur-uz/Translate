class translate:
    def __init__(self):
        self.kril = ["–ê", "–∞", "–ë", "–±", "–í", "–≤", "–ì", "–≥", "–î", "–¥", "–ï", "–µ", "–Å", "—ë", "–ñ", "–∂",
                "–ó", "–∑", "–ò", "–∏", "–ô", "–π", "–ö", "–∫", "–õ", "–ª", "–ú", "–º", "–ù", "–Ω", "–û", "–æ",
                "–ü", "–ø", "–†", "—Ä", "–°", "—Å", "–¢", "—Ç", "–£", "—É", "–§", "—Ñ", "–•", "—Ö", "–¶", "—Ü",
                "–ß", "—á", "–®", "—à", "—ä", "—å", "–≠", "—ç", "–Æ", "—é", "–Ø", "—è", "–é", "—û",
                "“ö", "“õ", "“í", "“ì", "“≤", "“≥", " ", '"', "#", "$", "%", "&", "(", ")", "*", "+", ",", "-", ".", "/",
                "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", ":", ";", "<", "=", ">", "?", "@", "[", "]", "^", "_",
                "`", "‚ùá", "üì±", "üåê", "‚úÖ"]

        self.lotin = ["A", "a", "B", "b", "V", "v", "G", "g", "D", "d", "Ye", "ye", "Yo", "yo", "J", "j",
                 "Z", "z", "I", "i", "Y", "y", "K", "k", "L", "l", "M", "m", "N", "n", "O", "o",
                 "P", "p", "R", "r", "S", "s", "T", "t", "U", "u", "F", "f", "X", "x", "S", "s",
                 "Ch", "ch", "Sh", "sh", "‚Äô", "", "E", "e", "Yu", "yu", "Ya", "ya", "O‚Äò", "o‚Äò",
                 "Q", "q", "G‚Äò", "g‚Äò", "H", "h", " ", '"', "#", "$", "%", "&", "(", ")", "*", "+", ",", "-", ".", "/",
                 "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", ":", ";", "<", "=", ">", "?", "@", "[", "]", "^", "_", "`", "‚ùá", "üì±", "üåê", "‚úÖ"]

    def t_translit(self, text= 'Matin kiriting..'):

        text = text.replace("Yo'", "–ô—û").replace("yo'", '–π—û').replace("Yo‚Äò", "–ô—û").replace("yo‚Äò", '–π—û').replace("yo ª",'–π—û').replace("Yo ª", "–ô—û").replace("yo`",'–π—û').replace("Yo`", "–ô—û")
        text = text.replace("YO'", "–ô—û").replace("YO‚Äò", "–ô—û").replace("YO ª", "–ô—û").replace("YO`", "–ô—û")
        text = text.replace("Ye", "–ï").replace("ye", "–µ").replace("Yo", "–Å").replace("yo", "—ë").replace("Ch","–ß").replace("ch", "—á").replace("Sh", "–®").replace("sh", "—à").replace("Yu", "–Æ").replace("yu", "—é").replace("Ya","–Ø").replace("ya", "—è").replace("O‚Äò", "–é").replace("o‚Äò", "—û").replace("G‚Äò", "“í").replace("g‚Äò", "“ì")
        text = text.replace("YE", "–ï").replace("YO", "–Å").replace("CH","–ß").replace("SH", "–®").replace("YU", "–Æ").replace("YA","–Ø")
        text = text.replace("o ª", '—û').replace("O ª", "–é").replace("g ª", "“ì").replace("G ª", "“í").replace("–û‚Äò", "–é").replace("o‚Äò", '—û').replace("–û`", "–é").replace("o`", '—û')
        text = text.replace("O'", "–é").replace("o'", "—û").replace("G'", "“í").replace("g'", "“ì").replace("G`", "“í").replace("g`", "“ì")
        text = text.replace("'", "—ä").replace("`", "—ä")

        t = []
        for i in text:
            t.append(i)
        print(t)
        n = ''
        for j, i in enumerate(t):
            for index, (l, k) in enumerate(zip(self.lotin, self.kril)):
                if i == '\n':
                    n = f"{n}{i}"
                    break
                if (i == 'e' and i == l) or (i == 'E' and i == l):
                    if (text[j - 1] == ' ') or (j - 1 < 0):
                        n = f"{n}{k}"
                        break
                    else:
                        n = f"{n}{i}"
                        break
                if i == l:
                    n = f"{n}{self.kril[index]}"
                    break
                elif i == k:
                    n = f"{n}{k}"
                    break
        print(n)
        return n

data = translate()
data.t_translit(text="")